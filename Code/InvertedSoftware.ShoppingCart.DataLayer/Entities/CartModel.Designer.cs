//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Category), "FeaturedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.FeaturedProduct))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Category), "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.ProductCategory))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "FeaturedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.FeaturedProduct))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_Image_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "Image", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Image))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "ProductCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.ProductCategory))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "RelatedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.RelatedProduct))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product1", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "RelatedProduct", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.RelatedProduct))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_ProductOption_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "ProductOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.ProductOption))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_CustomField_CustomFieldType", "CustomFieldType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.CustomFieldType), "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.CustomField))]
[assembly: EdmRelationshipAttribute("InvertedSoftwareCartModel", "FK_CustomField_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.Product), "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InvertedSoftware.ShoppingCart.DataLayer.Entities.CustomField))]

#endregion

namespace InvertedSoftware.ShoppingCart.DataLayer.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Category
        {
            get
            {
                if ((_Category == null))
                {
                    _Category = base.CreateObjectSet<Category>("Category");
                }
                return _Category;
            }
        }
        private ObjectSet<Category> _Category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedProduct> FeaturedProduct
        {
            get
            {
                if ((_FeaturedProduct == null))
                {
                    _FeaturedProduct = base.CreateObjectSet<FeaturedProduct>("FeaturedProduct");
                }
                return _FeaturedProduct;
            }
        }
        private ObjectSet<FeaturedProduct> _FeaturedProduct;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Image
        {
            get
            {
                if ((_Image == null))
                {
                    _Image = base.CreateObjectSet<Image>("Image");
                }
                return _Image;
            }
        }
        private ObjectSet<Image> _Image;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductCategory> ProductCategory
        {
            get
            {
                if ((_ProductCategory == null))
                {
                    _ProductCategory = base.CreateObjectSet<ProductCategory>("ProductCategory");
                }
                return _ProductCategory;
            }
        }
        private ObjectSet<ProductCategory> _ProductCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelatedProduct> RelatedProduct
        {
            get
            {
                if ((_RelatedProduct == null))
                {
                    _RelatedProduct = base.CreateObjectSet<RelatedProduct>("RelatedProduct");
                }
                return _RelatedProduct;
            }
        }
        private ObjectSet<RelatedProduct> _RelatedProduct;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductOption> ProductOption
        {
            get
            {
                if ((_ProductOption == null))
                {
                    _ProductOption = base.CreateObjectSet<ProductOption>("ProductOption");
                }
                return _ProductOption;
            }
        }
        private ObjectSet<ProductOption> _ProductOption;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomField> CustomField
        {
            get
            {
                if ((_CustomField == null))
                {
                    _CustomField = base.CreateObjectSet<CustomField>("CustomField");
                }
                return _CustomField;
            }
        }
        private ObjectSet<CustomField> _CustomField;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomFieldType> CustomFieldType
        {
            get
            {
                if ((_CustomFieldType == null))
                {
                    _CustomFieldType = base.CreateObjectSet<CustomFieldType>("CustomFieldType");
                }
                return _CustomFieldType;
            }
        }
        private ObjectSet<CustomFieldType> _CustomFieldType;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategory(Category category)
        {
            base.AddObject("Category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedProduct EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedProduct(FeaturedProduct featuredProduct)
        {
            base.AddObject("FeaturedProduct", featuredProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Image EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImage(Image image)
        {
            base.AddObject("Image", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Product EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductCategory(ProductCategory productCategory)
        {
            base.AddObject("ProductCategory", productCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelatedProduct EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelatedProduct(RelatedProduct relatedProduct)
        {
            base.AddObject("RelatedProduct", relatedProduct);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductOption EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductOption(ProductOption productOption)
        {
            base.AddObject("ProductOption", productOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomField EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomField(CustomField customField)
        {
            base.AddObject("CustomField", customField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFieldType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomFieldType(CustomFieldType customFieldType)
        {
            base.AddObject("CustomFieldType", customFieldType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName, global::System.Boolean active)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            category.Active = active;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentCategoryID
        {
            get
            {
                return _ParentCategoryID;
            }
            set
            {
                OnParentCategoryIDChanging(value);
                ReportPropertyChanging("ParentCategoryID");
                _ParentCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryID");
                OnParentCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentCategoryID;
        partial void OnParentCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Category", "FeaturedProduct")]
        public EntityCollection<FeaturedProduct> FeaturedProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedProduct>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "FeaturedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedProduct>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "FeaturedProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Category", "ProductCategory")]
        public EntityCollection<ProductCategory> ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategory>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategory>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "ProductCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="CustomField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomField object.
        /// </summary>
        /// <param name="customFieldID">Initial value of the CustomFieldID property.</param>
        /// <param name="customFieldName">Initial value of the CustomFieldName property.</param>
        /// <param name="isRequired">Initial value of the IsRequired property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static CustomField CreateCustomField(global::System.Int32 customFieldID, global::System.String customFieldName, global::System.Boolean isRequired, global::System.Boolean active)
        {
            CustomField customField = new CustomField();
            customField.CustomFieldID = customFieldID;
            customField.CustomFieldName = customFieldName;
            customField.IsRequired = isRequired;
            customField.Active = active;
            return customField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldID
        {
            get
            {
                return _CustomFieldID;
            }
            set
            {
                if (_CustomFieldID != value)
                {
                    OnCustomFieldIDChanging(value);
                    ReportPropertyChanging("CustomFieldID");
                    _CustomFieldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldID");
                    OnCustomFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomFieldID;
        partial void OnCustomFieldIDChanging(global::System.Int32 value);
        partial void OnCustomFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomFieldName
        {
            get
            {
                return _CustomFieldName;
            }
            set
            {
                OnCustomFieldNameChanging(value);
                ReportPropertyChanging("CustomFieldName");
                _CustomFieldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CustomFieldName");
                OnCustomFieldNameChanged();
            }
        }
        private global::System.String _CustomFieldName;
        partial void OnCustomFieldNameChanging(global::System.String value);
        partial void OnCustomFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_CustomField_CustomFieldType", "CustomFieldType")]
        public CustomFieldType CustomFieldType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomFieldType>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomFieldType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomFieldType>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomFieldType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomFieldType> CustomFieldTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomFieldType>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomFieldType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomFieldType>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomFieldType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_CustomField_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_CustomField_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_CustomField_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_CustomField_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_CustomField_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="CustomFieldType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomFieldType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomFieldType object.
        /// </summary>
        /// <param name="customFieldTypeID">Initial value of the CustomFieldTypeID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static CustomFieldType CreateCustomFieldType(global::System.Int32 customFieldTypeID, global::System.Boolean active)
        {
            CustomFieldType customFieldType = new CustomFieldType();
            customFieldType.CustomFieldTypeID = customFieldTypeID;
            customFieldType.Active = active;
            return customFieldType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldTypeID
        {
            get
            {
                return _CustomFieldTypeID;
            }
            set
            {
                if (_CustomFieldTypeID != value)
                {
                    OnCustomFieldTypeIDChanging(value);
                    ReportPropertyChanging("CustomFieldTypeID");
                    _CustomFieldTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldTypeID");
                    OnCustomFieldTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomFieldTypeID;
        partial void OnCustomFieldTypeIDChanging(global::System.Int32 value);
        partial void OnCustomFieldTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomFieldTypeName
        {
            get
            {
                return _CustomFieldTypeName;
            }
            set
            {
                OnCustomFieldTypeNameChanging(value);
                ReportPropertyChanging("CustomFieldTypeName");
                _CustomFieldTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomFieldTypeName");
                OnCustomFieldTypeNameChanged();
            }
        }
        private global::System.String _CustomFieldTypeName;
        partial void OnCustomFieldTypeNameChanging(global::System.String value);
        partial void OnCustomFieldTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_CustomField_CustomFieldType", "CustomField")]
        public EntityCollection<CustomField> CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomField>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomField>("InvertedSoftwareCartModel.FK_CustomField_CustomFieldType", "CustomField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="FeaturedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedProduct object.
        /// </summary>
        /// <param name="featuredProductID">Initial value of the FeaturedProductID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static FeaturedProduct CreateFeaturedProduct(global::System.Int32 featuredProductID, global::System.Boolean active)
        {
            FeaturedProduct featuredProduct = new FeaturedProduct();
            featuredProduct.FeaturedProductID = featuredProductID;
            featuredProduct.Active = active;
            return featuredProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FeaturedProductID
        {
            get
            {
                return _FeaturedProductID;
            }
            set
            {
                if (_FeaturedProductID != value)
                {
                    OnFeaturedProductIDChanging(value);
                    ReportPropertyChanging("FeaturedProductID");
                    _FeaturedProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeaturedProductID");
                    OnFeaturedProductIDChanged();
                }
            }
        }
        private global::System.Int32 _FeaturedProductID;
        partial void OnFeaturedProductIDChanging(global::System.Int32 value);
        partial void OnFeaturedProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("InvertedSoftwareCartModel.FK_FeaturedProduct_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        /// <param name="imageURL">Initial value of the ImageURL property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Image CreateImage(global::System.Int32 imageID, global::System.String imageURL, global::System.Boolean active)
        {
            Image image = new Image();
            image.ImageID = imageID;
            image.ImageURL = imageURL;
            image.Active = active;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageURL
        {
            get
            {
                return _ImageURL;
            }
            set
            {
                OnImageURLChanging(value);
                ReportPropertyChanging("ImageURL");
                _ImageURL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageURL");
                OnImageURLChanged();
            }
        }
        private global::System.String _ImageURL;
        partial void OnImageURLChanging(global::System.String value);
        partial void OnImageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_Image_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_Image_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_Image_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_Image_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_Image_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static Product CreateProduct(global::System.Int32 productID, global::System.Boolean active)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.Active = active;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CatalogNumber
        {
            get
            {
                return _CatalogNumber;
            }
            set
            {
                OnCatalogNumberChanging(value);
                ReportPropertyChanging("CatalogNumber");
                _CatalogNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CatalogNumber");
                OnCatalogNumberChanged();
            }
        }
        private global::System.String _CatalogNumber;
        partial void OnCatalogNumberChanging(global::System.String value);
        partial void OnCatalogNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _price;
        partial void OnpriceChanging(Nullable<global::System.Decimal> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_FeaturedProduct_Product", "FeaturedProduct")]
        public EntityCollection<FeaturedProduct> FeaturedProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedProduct>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "FeaturedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedProduct>("InvertedSoftwareCartModel.FK_FeaturedProduct_Product", "FeaturedProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_Image_Product", "Image")]
        public EntityCollection<Image> Image
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("InvertedSoftwareCartModel.FK_Image_Product", "Image");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("InvertedSoftwareCartModel.FK_Image_Product", "Image", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Product", "ProductCategory")]
        public EntityCollection<ProductCategory> ProductCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductCategory>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "ProductCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductCategory>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "ProductCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product", "RelatedProduct")]
        public EntityCollection<RelatedProduct> RelatedProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelatedProduct>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "RelatedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelatedProduct>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "RelatedProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product1", "RelatedProduct")]
        public EntityCollection<RelatedProduct> RelatedProduct1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelatedProduct>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "RelatedProduct");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelatedProduct>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "RelatedProduct", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductOption_Product", "ProductOption")]
        public EntityCollection<ProductOption> ProductOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductOption>("InvertedSoftwareCartModel.FK_ProductOption_Product", "ProductOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductOption>("InvertedSoftwareCartModel.FK_ProductOption_Product", "ProductOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_CustomField_Product", "CustomField")]
        public EntityCollection<CustomField> CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomField>("InvertedSoftwareCartModel.FK_CustomField_Product", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomField>("InvertedSoftwareCartModel.FK_CustomField_Product", "CustomField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="ProductCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductCategory object.
        /// </summary>
        /// <param name="productCategoryID">Initial value of the ProductCategoryID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ProductCategory CreateProductCategory(global::System.Int32 productCategoryID, global::System.Boolean active)
        {
            ProductCategory productCategory = new ProductCategory();
            productCategory.ProductCategoryID = productCategoryID;
            productCategory.Active = active;
            return productCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductCategoryID
        {
            get
            {
                return _ProductCategoryID;
            }
            set
            {
                if (_ProductCategoryID != value)
                {
                    OnProductCategoryIDChanging(value);
                    ReportPropertyChanging("ProductCategoryID");
                    _ProductCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductCategoryID");
                    OnProductCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductCategoryID;
        partial void OnProductCategoryIDChanging(global::System.Int32 value);
        partial void OnProductCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("InvertedSoftwareCartModel.FK_ProductCategory_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductCategory_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductCategory_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="ProductOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductOption object.
        /// </summary>
        /// <param name="productOptionID">Initial value of the ProductOptionID property.</param>
        /// <param name="productOptionName">Initial value of the ProductOptionName property.</param>
        /// <param name="productOptionGroup">Initial value of the ProductOptionGroup property.</param>
        /// <param name="priceChange">Initial value of the PriceChange property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ProductOption CreateProductOption(global::System.Int32 productOptionID, global::System.String productOptionName, global::System.String productOptionGroup, global::System.Decimal priceChange, global::System.Boolean active)
        {
            ProductOption productOption = new ProductOption();
            productOption.ProductOptionID = productOptionID;
            productOption.ProductOptionName = productOptionName;
            productOption.ProductOptionGroup = productOptionGroup;
            productOption.PriceChange = priceChange;
            productOption.Active = active;
            return productOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductOptionID
        {
            get
            {
                return _ProductOptionID;
            }
            set
            {
                if (_ProductOptionID != value)
                {
                    OnProductOptionIDChanging(value);
                    ReportPropertyChanging("ProductOptionID");
                    _ProductOptionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductOptionID");
                    OnProductOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductOptionID;
        partial void OnProductOptionIDChanging(global::System.Int32 value);
        partial void OnProductOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductOptionName
        {
            get
            {
                return _ProductOptionName;
            }
            set
            {
                OnProductOptionNameChanging(value);
                ReportPropertyChanging("ProductOptionName");
                _ProductOptionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductOptionName");
                OnProductOptionNameChanged();
            }
        }
        private global::System.String _ProductOptionName;
        partial void OnProductOptionNameChanging(global::System.String value);
        partial void OnProductOptionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductOptionGroup
        {
            get
            {
                return _ProductOptionGroup;
            }
            set
            {
                OnProductOptionGroupChanging(value);
                ReportPropertyChanging("ProductOptionGroup");
                _ProductOptionGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductOptionGroup");
                OnProductOptionGroupChanged();
            }
        }
        private global::System.String _ProductOptionGroup;
        partial void OnProductOptionGroupChanging(global::System.String value);
        partial void OnProductOptionGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PriceChange
        {
            get
            {
                return _PriceChange;
            }
            set
            {
                OnPriceChangeChanging(value);
                ReportPropertyChanging("PriceChange");
                _PriceChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceChange");
                OnPriceChangeChanged();
            }
        }
        private global::System.Decimal _PriceChange;
        partial void OnPriceChangeChanging(global::System.Decimal value);
        partial void OnPriceChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_ProductOption_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductOption_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductOption_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductOption_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_ProductOption_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InvertedSoftwareCartModel", Name="RelatedProduct")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelatedProduct : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelatedProduct object.
        /// </summary>
        /// <param name="relatedProductID">Initial value of the RelatedProductID property.</param>
        public static RelatedProduct CreateRelatedProduct(global::System.Int32 relatedProductID)
        {
            RelatedProduct relatedProduct = new RelatedProduct();
            relatedProduct.RelatedProductID = relatedProductID;
            return relatedProduct;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedProductID
        {
            get
            {
                return _RelatedProductID;
            }
            set
            {
                if (_RelatedProductID != value)
                {
                    OnRelatedProductIDChanging(value);
                    ReportPropertyChanging("RelatedProductID");
                    _RelatedProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelatedProductID");
                    OnRelatedProductIDChanged();
                }
            }
        }
        private global::System.Int32 _RelatedProductID;
        partial void OnRelatedProductIDChanging(global::System.Int32 value);
        partial void OnRelatedProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InvertedSoftwareCartModel", "FK_RelatedProduct_Product1", "Product")]
        public Product Product1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> Product1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("InvertedSoftwareCartModel.FK_RelatedProduct_Product1", "Product", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
